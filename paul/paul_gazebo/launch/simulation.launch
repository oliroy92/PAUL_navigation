<?xml version="1.0" ?>
<launch>
    <!-- Parameters -->
    <arg name="gui"                 default="true"/>
    <arg name="robot_name"          default="paul"/>
    <!-- Gazebo parameters -->
    <arg name="use_sim_time"        default="true"/>
    <arg name="debug"               default="false" />
    <arg name="paused"              default="true"/>

    <!-- Kinova arm parameters -->
    <arg name="cyclic_data_publish_rate" default="40"/> <!--Hz-->
    <!-- Kinova arm parameters -->
    <arg name="arm"       default="$(optenv PAUL_ARM_MODEL gen3_lite)" />
    <arg name="dof"       default="$(optenv PAUL_ARM_DOF 6)" />
    <arg name="vision"    default="$(optenv PAUL_ARM_VISION false)" />

    <arg name="gripper"   default="$(optenv PAUL_ARM_GRIPPER gen3_lite_2f)" />

    <arg name="sim"       default="$(optenv PAUL_ARM_SIM false)" />
    <arg name="prefix"    default="$(optenv PAUL_ARM_PREFIX arm_)" />

    <!-- Spawn paul into Gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-x 0.0 -y 0.0 -z 0.0 -urdf -param robot_description -model $(arg robot_name) -robot_namespace $(arg robot_name)
        -J $(arg prefix)joint_1 1.57
        -J $(arg prefix)joint_2 0.35
        -J $(arg prefix)joint_3 3.14
        -J $(arg prefix)joint_4 -2.00
        -J $(arg prefix)joint_5 0
        -J $(arg prefix)joint_6 -1.00"/>

    <!-- Load controller configuration file from kortex_control package -->
    <rosparam file="$(find kortex_control)/arms/$(arg arm)/$(arg dof)dof/config/joint_position_controllers.yaml" command="load" subst_value="true"/>
    <rosparam file="$(find kortex_control)/grippers/$(arg gripper)/config/gripper_action_controller_parameters.yaml" command="load" subst_value="true"/>

    <node name="$(arg prefix)$(arg arm)_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" args="$(arg prefix)$(arg arm)_joint_trajectory_controller $(arg prefix)joint_state_controller $(arg prefix)$(arg gripper)_gripper_controller"/>

    <!-- Individual position controllers are stopped at first -->
    <node name="$(arg prefix)$(arg arm)_position_controllers_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" if="$(eval arg('dof') == 6)" args=" --stopped
        $(arg prefix)joint_1_position_controller
        $(arg prefix)joint_2_position_controller
        $(arg prefix)joint_3_position_controller
        $(arg prefix)joint_4_position_controller
        $(arg prefix)joint_5_position_controller
        $(arg prefix)joint_6_position_controller"/>

    <!-- Start simulated Kortex Driver -->
    <node name="$(arg robot_name)_driver" pkg="kortex_driver" type="kortex_arm_driver" output="screen"> <!--launch-prefix="gdb -ex run args"-->
        <param name="sim" value="true"/>
        <param name="cyclic_data_publish_rate" value="$(arg cyclic_data_publish_rate)"/>
        <param name="arm" value="$(arg arm)"/>
        <param name="gripper" value="$(arg gripper)"/>
        <param name="dof" value="$(arg dof)"/>
        <param name="robot_name" value="$(arg robot_name)"/>
        <param name="prefix" value="$(arg prefix)"/>
        <rosparam command="load" file="$(find kortex_description)/arms/$(arg arm)/$(arg dof)dof/config/joint_limits.yaml" subst_value="true"/>
        <rosparam command="load" file="$(find kortex_description)/arms/$(arg arm)/$(arg dof)dof/config/twist_limits.yaml" subst_value="true"/>
        <!-- If there is a gripper, load the active joint names for it -->
        <rosparam command="load" file="$(find kortex_description)/grippers/$(arg gripper)/config/joint_limits.yaml" unless="$(eval not arg('gripper'))" subst_value="true"/>
    </node>

    <!-- Start MoveIt main executable -->
    <!-- TODO Find cleaner way to do that and that will work with other arms -->
    <!-- With gripper -->
    <include file="$(find paul_gen3_lite_moveit_config)/launch/move_group.launch"/>

    <!-- Sleep, then unpause the physics in Gazebo and home the robot -->
    <node name="home_the_arm" pkg="kortex_gazebo" type="home_robot.py" output="screen" respawn="false" launch-prefix="bash -c 'sleep 5; $0 $@'">
        <param name="robot_name" value="$(arg robot_name)"/>
    </node>
</launch>